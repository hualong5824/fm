电商后端管理项目：
1.配置API 
①：首先有个数据库，把用到的sql文件导入到数据库中，
②：下一步Mysql服务器开启。
③：配置default.json文件。先让接口服务器跑起来。那么怎么跑呢,通过什么方式跑呢。参考以下：

2.通过API接口文档，了解接口说明。
①：我们看到此项目中运用了Token认证（一种令牌，来源于服务端，登陆
成功后会自动返回，会有时间周期，可自己再default.json中配置）
②：后端返回数据格式统一为JSON
③：支持的请求方式 get post put patch delete head options
④：返回状态码 200 201 204 400 401等

3.测试接口(postman软件测试)
①：可参考接口文档（登陆验证接口验证是否正常）
http://localhost:8888/api/private/v1/login?username=hualong&password=123

4.项目起步
①：vue-cli初始化项目
②：初始化后文件介绍： 
    node_modules  第三方包
    src  项目源码
    assets  存储资源，例如 css、img、fonts
    components  存储所有公共组件
    router  路由
    index.js  路由配置文件
    App.vue  单页面应用程序的根组件
    main.js  开机键，负责把根组件替换到根节点
    Login.vue根组件文件
static  可以放一些静态资源

5.git工作流程
①：利用git branch 查看分支，git checkout -b dev-login切换并新建分支
②：初始化本地项目 git init git add . 传到暂存区 git commit -m ‘备注’ 放置本地仓库
③：将本地仓库push到云端git

6.通过githubDesktop 软件管理本项目 把本地项目加载到软件中，
或者git仓库中直接克隆下来皆可。

7.项目使用的是element-ui （一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库
移动端是：mint-ui）
①：安装运行依赖   npm install element -ui 
②：配置element -ui 官网上面（引入 Element）板块中 直接复制粘贴即可。

8.登陆页面路由配置
①：把cli创建的一些没用的文件或者引入模块给删除。
②：创建views文件夹里面放置Login.vue 根组件文件
③: 用@在index.js导入组件，在Router中配置login页面的路由
（@，就是从src路径开始，可在webpack.base.conf配置修改路径）

9.登陆页面结构与样式
①：页面依赖于element-ui 把所需要的form表单结构复制到login.vue文件中。
②：利用CSS样式，在原有的样式上稍微修改。（路由部分已在第8配置完毕）

10配置封装axios
①：在Src文件夹下创建一个plugins（插件）文件夹，在创建一个MyHttp.js文件用于放置封装的axios。
②：创建完毕后，导出。
③：在main.js中导入进来模块

11.登陆功能实现。
①：获取表单所输入的数据。
②：利用封装好的axios发送异步请求，返回数据。
③: 根据接口文档或者打印所返回的数据，判断后台返回状态吗，提醒用户（此时用了elment的提醒组件）。
④：把令牌token存储到本地sessionStorage。

12.Home主页组件。

