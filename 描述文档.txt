电商后端管理项目：
1.配置API 
①：首先有个数据库，把用到的sql文件导入到数据库中，
②：下一步Mysql服务器开启。
③：配置default.json文件。先让接口服务器跑起来。那么怎么跑呢,通过什么方式跑呢。参考以下：

2.通过API接口文档，了解接口说明。
①：我们看到此项目中运用了Token认证（一种令牌，来源于服务端，登陆
成功后会自动返回，会有时间周期，可自己再default.json中配置）
②：后端返回数据格式统一为JSON
③：支持的请求方式 get post put patch delete head options
④：返回状态码 200 201 204 400 401等

3.测试接口(postman软件测试)
①：可参考接口文档（登陆验证接口验证是否正常）
http://localhost:8888/api/private/v1/login?username=hualong&password=123

4.项目起步
①：vue-cli初始化项目
②：初始化后文件介绍： 
    node_modules  第三方包
    src  项目源码
    assets  存储资源，例如 css、img、fonts
    components  存储所有公共组件
    router  路由
    index.js  路由配置文件
    App.vue  单页面应用程序的根组件
    main.js  开机键，负责把根组件替换到根节点
    Login.vue根组件文件
static  可以放一些静态资源

5.git工作流程
①：利用git branch 查看分支，git checkout -b dev-login切换并新建分支
②：初始化本地项目 git init git add . 传到暂存区 git commit -m ‘备注’ 放置本地仓库
③：将本地仓库push到云端git

6.通过githubDesktop 软件管理本项目 把本地项目加载到软件中，
或者git仓库中直接克隆下来皆可。

7.项目使用的是element-ui （一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库
移动端是：mint-ui）
①：安装运行依赖   npm install element -ui 
②：配置element -ui 官网上面（引入 Element）板块中 直接复制粘贴即可。

8.登陆页面路由配置
①：把cli创建的一些没用的文件或者引入模块给删除。
②：创建views文件夹里面放置Login.vue 根组件文件
③: 用@在index.js导入组件，在Router中配置login页面的路由
（@，就是从src路径开始，可在webpack.base.conf配置修改路径）

9.登陆页面结构与样式
①：页面依赖于element-ui 把所需要的form表单结构复制到login.vue文件中。
②：利用CSS样式，在原有的样式上稍微修改。（路由部分已在第8配置完毕）

10配置封装axios
①：在Src文件夹下创建一个plugins（插件）文件夹，在创建一个MyHttp.js文件用于放置封装的axios。
②：创建完毕后，导出。
③：在main.js中导入进来模块

11.登陆功能实现。
①：获取表单所输入的数据。
②：利用封装好的axios发送异步请求，返回数据。
③: 根据接口文档或者打印所返回的数据，判断后台返回状态吗，提醒用户（此时用了elment的提醒组件）。
④：把令牌token存储到本地sessionStorage。
⑤：配置登录成功后跳转的组件Home。（前提是已经构成home组件情况下，不然没法配置路由）
⑥：测试跳转的时候，出于用户体验来讲，我们应该在加上一个键盘事件keyup.native(就是在VUE组件标签中必须加上的，不然不会生效)，按回车就登录

12.Home主页。
①：把所需要的一些结构与样式填上。
②：在index.js中配置路由。

13.合并分支与删除分支和新建分支
①：每做一个功能我们需要在主分支上合并一下代码。    git merge dev-login
②：合并完成后，我们需要删除本地分支dev-login      git branch -d dev-login
③：远程仓库中的分支也需要删除                    git push origin --delete dev-login
④：为了下一个功能我们通过githubDesktop软件我们再创建一个新的分支（dev-home）

14.home头部部分
①：需利用栅格系统，分为3部分，一个logo，一个标题，一个退出按钮，需注意：element-ui提供的栅格是分为24块。
②：根据自己所需要的样式来直接设置覆盖以前样式即可。

15.home主页左侧导航部分
①：在elment-ui中有所对应的导航组件部分，可以直接复制粘贴到项目中，需注意：根据需求来删除自己所不需要的部分
②：配置，例如是否只保持一个子菜单的展开可配置unique-opened 值为布尔类型。所有配置所需要的都会有所对应的配置选项，根据需求来设置即可。

16.在home中进行验证登录。
①：我们需要进行限制，不应该直接输入所对应的路由就让用户进入。那么我们所做的登录验证将毫无意义。
②：当用户不通过登录验证的直接访问到后台的时候，我们需要在所对应的主页组件中设置当页面没有加载的时候所对应的钩子函数beforeCreate中进行拦截
③：判断用户是否登录的状态，从本地sessionStoragge中拿token。看是否可以获取得到，如果没有获取到。则表示没有登录，让其跳转到登录login页面中。
④：此时需注意，我们限制是通过本地sessionStoragge中是否存在token，那么如果用户随便设置一个，也会登录到后台页面中。但是，不用担心，其实毫无意义。
因为用户只能看到一些没用的组件而已。因为只有携带着token这个令牌和权限才可以进行操作和展示相对应的功能按钮等。

16.退出登录操作
①：我们考虑一下，其实用户直接点击关闭窗口也可以完成退出。但是那样是不安全的，因为本地还是会存在所对应的token
②：退出登录其实本质是清除本地sessionStoragge中的token，点击确认退出的时候，清除本地token，跳转到登录页面。
③：出于防止用户点错 退出按钮 我们可以设置一下提醒，是否确定退出。（采用element中的提醒组件）
